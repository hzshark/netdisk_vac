<?php
use Service\UserService;
/**
 * VAC定制接口
 * @author hshao
 * @version 2015-12-24 11:24:59
 */
require __DIR__.'/../Lib/functions.php';

if (is_file("Conf/config.php")) {
    C(include 'Conf/config.php');
}
$timezone = "PRC";
if (PHP_VERSION >= '5.1' && !empty($timezone))
{
    date_default_timezone_set($timezone);
}
class order{
    public function orderRelationUpdateNotify($orderRelationUpdateNotifyRequest){
        $resstl = new stdClass();
        $resstl->resultCode = -6;
        $resstl->recordSequenceId = '0000000000000';

        $res['orderRelationUpdateNotifyResponse'] = $resstl;

        $orderRelationUpdateNotifyResponse = array('resultCode'=>1,'recordSequenceId'=>'1111');

        return $orderRelationUpdateNotifyResponse;
//         $user = new UserService();
//         foreach($orderRelationUpdateNotifyRequest as $k=>$r){
//             $msg.="{$k}=>'{$r}',";
//         }
//         $mobile = '13989497004';
//         $user->addVacLog($mobile, $msg);
//         $res['orderRelationUpdateNotifyResponse'] = array();
//         if (count($orderRelationUpdateNotifyRequest) == 15){
//             $recordSequenceId = $orderRelationUpdateNotifyRequest['recordSequenceId'];
//             $userIdType = $orderRelationUpdateNotifyRequest['userIdType'];
//             $userId = $orderRelationUpdateNotifyRequest['userId'];
//             $serviceType = $orderRelationUpdateNotifyRequest['serviceType'];
//             $spId = $orderRelationUpdateNotifyRequest['spId'];
//             $productId = $orderRelationUpdateNotifyRequest['productId'];
//             $updateType = $orderRelationUpdateNotifyRequest['updateType'];
//             $updateTime = $orderRelationUpdateNotifyRequest['updateTime'];
//             $updateDesc = $orderRelationUpdateNotifyRequest['updateDesc'];
//             $linkId = $orderRelationUpdateNotifyRequest['linkId'];
//             $content = $orderRelationUpdateNotifyRequest['content'];
//             $effectiveDate = $orderRelationUpdateNotifyRequest['effectiveDate'];
//             $expireDate = $orderRelationUpdateNotifyRequest['expireDate'];
//             $time_stamp = $orderRelationUpdateNotifyRequest['time_stamp'];
//             $encodeStr = $orderRelationUpdateNotifyRequest['encodeStr'];

//             $costType = 4;
//             $package = 'package';

//             $ret = $user->setUserCost($mobile, $costType, $package);

//             $user->addVacLog($mobile, 'set user cost table result=>'.$ret);

//             if ($ret){
//                 $res['orderRelationUpdateNotifyResponse'] = array('resultCode'=>0,'recordSequenceId'=>$recordSequenceId);
//             }
//         }else{
//             $res['orderRelationUpdateNotifyResponse'] = array('resultCode'=>-6,'recordSequenceId'=>'');
//         }

//         return $res;
    }
}

$soaparray=array('soap_version' => SOAP_1_2);
$server= new \SoapServer("http://10.155.30.170:888/ws/order.wsdl",$soaparray);
// $server=new SoapServer(file_get_contents('order.wsdl'),array('soap_version' => SOAP_1_2));
$server->setClass("order");
$server->handle();
?>